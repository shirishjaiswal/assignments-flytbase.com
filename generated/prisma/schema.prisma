// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum DroneStatus {
  AVAILABLE
  ONLINE
  OFFLINE
  MAINTENANCE
  ERROR
}

type Location {
  latitude  Float
  longitude Float
  altitude  Float
}

model Drone {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  model       String
  modelId     String      @unique
  maxAltitude Int
  topSpeed    Int
  maxWeight   Float
  range       Float
  type        String
  status      DroneStatus
  battery     Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  missions    Mission[]
}

enum MissionType {
  IDEAL
  INSPECTION
  REPAIR
  DELIVERY
  EMERGENCY
}

enum MissionStatus {
  PENDING
  INPROGRESS
  COMPLETED
  ABORTED
  FAILED
}

enum RecurringIntervalType {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

model Mission {
  id                String                @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  type              MissionType
  area              String
  status            MissionStatus
  progress          Int
  recurring         Boolean
  waypoints         Location
  recurringInterval RecurringIntervalType
  drone             Drone?                @relation(fields: [droneId], references: [id])
  droneId           String?               @db.ObjectId
  droneLocation     Location?
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
  Report            Report[]
}

model Report {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  mission   Mission  @relation(fields: [missionId], references: [id])
  missionId String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
